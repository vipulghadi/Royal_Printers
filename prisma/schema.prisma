generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// =============================
// Category
// =============================
model Category {
  id        Int             @id @default(autoincrement())
  name      String          @db.VarChar(100)
  slug      String          @unique @db.VarChar(200)
  isActive  Boolean         @default(true)
  products  Product[]
  images    CategoryImage[]
  createdAt DateTime        @default(now())
  updatedAt DateTime        @updatedAt

  @@index([slug, isActive])
}

model CategoryImage {
  id         Int      @id @default(autoincrement())
  url        String   @db.VarChar(2048)
  altText    String?  @db.VarChar(255)
  categoryId Int
  category   Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  isActive   Boolean  @default(true)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@index([categoryId])
}

// =============================
// Product
// =============================
model Product {
  id            Int                 @id @default(autoincrement())
  name          String              @db.VarChar(255)
  slug          String              @unique @db.VarChar(100)
  description   String?             @db.Text
  basePrice     Decimal             @db.Decimal(10, 2)
  categoryId    Int?
  category      Category?           @relation(fields: [categoryId], references: [id], onDelete: SetNull)
  images        ProductImage[]
  attributes    ProductAttribute[]
  isTrending    Boolean             @default(false)
  isNew         Boolean             @default(false)
  isFeatured    Boolean             @default(false)
  isActive      Boolean             @default(true)
  createdAt     DateTime            @default(now())
  updatedAt     DateTime            @updatedAt

  @@index([categoryId, slug, isActive])
}

model ProductImage {
  id           Int      @id @default(autoincrement())
  url          String   @db.VarChar(2048)
  altText      String?  @db.VarChar(255)
  productId    Int
  product      Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  isActive     Boolean  @default(true)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@index([productId])
}

// =============================
// Attributes
// =============================
model Attribute {
  id                Int               @id @default(autoincrement())
  name              String            @db.VarChar(100)
  options           AttributeOption[]
  productAttributes ProductAttribute[]
  isActive          Boolean           @default(true)
  createdAt         DateTime          @default(now())
  updatedAt         DateTime          @updatedAt

  @@index([name, isActive])
}

model AttributeOption {
  id                Int               @id @default(autoincrement())
  value             String            @db.VarChar(100)
  description       String?           @db.Text
  attributeId       Int
  attribute         Attribute         @relation(fields: [attributeId], references: [id], onDelete: Restrict)
  productAttributes ProductAttribute[]
  isActive          Boolean           @default(true)
  createdAt         DateTime          @default(now())
  updatedAt         DateTime          @updatedAt

  @@index([attributeId])
}

// =============================
// Product Attributes
// =============================
model ProductAttribute {
  id                Int             @id @default(autoincrement())
  productId         Int
  product           Product         @relation(fields: [productId], references: [id], onDelete: Cascade)
  attributeId       Int
  attribute         Attribute       @relation(fields: [attributeId], references: [id], onDelete: Restrict)
  attributeOptionId Int
  attributeOption   AttributeOption @relation(fields: [attributeOptionId], references: [id], onDelete: Restrict)
  priceAdjustment   Decimal         @db.Decimal(10, 2) @default(0.00)
  isActive          Boolean         @default(true)
  createdAt         DateTime        @default(now())
  updatedAt         DateTime        @updatedAt

  @@unique([productId, attributeId, attributeOptionId])
  @@index([productId, attributeId, attributeOptionId])
}
